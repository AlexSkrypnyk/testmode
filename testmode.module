<?php

/**
 * @file
 * Test module used for providing hook implementation used in tests.
 *
 * Test hooks alter content only if the test mode is enabled ('test_mode'
 * variable is set).
 * This module should never be enabled in production.
 */

use Drupal\Core\Database\Query\AlterableInterface;
use Drupal\Core\Link;
use Drupal\Core\Messenger\MessengerInterface;
use Drupal\Core\Url;
use Drupal\testmode\Testmode;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_views_query_alter().
 */
function testmode_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  // Add cache tag to all views.
  // Required to invalidate tags when enabling test mode for already cached
  // views.
  // Since this module is not for production environment, the views caching
  // may be reset more often, so using single views tag for all views is
  // sufficient enough.
  $view->element['#cache']['tags'][] = Testmode::CACHE_VIEWS;

  $testmode = Testmode::getInstance();
  if ($testmode->isTestMode()) {
    if (in_array($view->id(), $testmode->getNodeViews())) {
      // Add 'title' field to the query if it was not originally provided.
      if (!in_array('title', array_keys($query->fields))) {
        $query->addField('node_field_data', 'title');
      }
      $group = $query->setWhereGroup('OR');
      foreach ($testmode->getNodePatterns() as $pattern) {
        $query->addWhere($group, 'node_field_data.title', $pattern, 'LIKE');
      }
      return;
    }

    if (in_array($view->id(), $testmode->getTermViews())) {
      // Add 'name' field to the query if it was not originally provided.
      if (!in_array('name', array_keys($query->fields))) {
        $query->addField('taxonomy_term_field_data', 'name');
      }
      $group = $query->setWhereGroup('OR');
      foreach ($testmode->getTermPatterns() as $pattern) {
        $query->addWhere($group, 'taxonomy_term_field_data.name', $pattern, 'LIKE');
      }
      return;
    }

    if (in_array($view->id(), $testmode->getUserViews())) {
      // Add 'mail' field to the query if it was not originally provided.
      if (!in_array('mail', array_keys($query->fields))) {
        $query->addField('users_field_data', 'mail');
      }
      $group = $query->setWhereGroup('OR');
      foreach ($testmode->getUserPatterns() as $pattern) {
        $query->addWhere($group, 'users_field_data.mail', $pattern, 'LIKE');
      }
      return;
    }
  }
}

/**
 * Implements hook_query_alter().
 */
function testmode_query_alter(AlterableInterface $query) {
  // Filter term query used for Taxonomy Term Overview page.
  if ($query->hasTag('taxonomy_term_access')) {
    $route = Drupal::routeMatch()->getRouteName();
    if ($route == 'entity.taxonomy_vocabulary.overview_form') {
      $testmode = Testmode::getInstance();
      if ($testmode->isTestMode()) {
        if ($testmode->getListTerm()) {
          $query->join('taxonomy_term_field_data', 'ttfd', 'ttfd.tid = t.tid');
          $or = $query->orConditionGroup();
          foreach ($testmode->getTermPatterns() as $pattern) {
            $or->condition('ttfd.name', $pattern, 'LIKE');
          }
          $query->condition($or);
        }
      }
    }
  }
}

/**
 * Implements hook_page_bottom().
 */
function testmode_page_bottom(array &$page_bottom) {
  if (\Drupal::currentUser()->hasPermission('administer site configuration') && Testmode::getInstance()->isTestMode()) {
    $messenger = \Drupal::messenger();
    $link = Link::fromTextAndUrl(t('Testmode config page'), Url::fromRoute('testmode.admin_settings'))->toString();
    $messenger->addMessage(t('Test mode is enabled. Most likely your tests did not clear the test mode flag properly. Disable test mode at @link.', ['@link' => $link]), MessengerInterface::TYPE_WARNING);
  }
}
